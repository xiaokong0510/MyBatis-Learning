<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace:名称空间，可以绑定一个Mapper接口-->
<!--编写sql语句-->
<!--id：唯一标识，如果有Mapper接口文件，需要对应其中的方法名-->
<!--resultType：对应返回结果类型-->
<!--#{id}：从传递过来的参数中取出id值-->
<mapper namespace="com.xiao.mybatis.mapper.EmployeeMapper">
    <select id="selectEmp" resultType="com.xiao.mybatis.entity.Employee">
        select id, last_name lastName, gender, email
        from tbl_employee
        where id = #{id}
    </select>

    <!--    查询并返回集合-->
    <select id="selectAll" resultType="com.xiao.mybatis.entity.Employee">
        select *
        from tbl_employee
    </select>

    <select id="selectEmpByIdAndName" resultType="com.xiao.mybatis.entity.Employee">
        select *
        from tbl_employee
        where id = #{id}
          and last_name = #{lastName}
    </select>

    <!--parameterType:参数类型，可以省略-->
    <!--useGeneratedKeys="true":使用自增主键获取主键值策略-->
    <!--keyProperty="id":获取到的主键封装给JavaBean的id属性-->
    <insert id="addEmp" parameterType="com.xiao.mybatis.entity.Employee"
            useGeneratedKeys="true" keyProperty="id">
        insert into tbl_employee (last_name, gender, email) value (#{lastName}, #{gender}, #{email})
    </insert>

    <!--    根据id删除-->
    <delete id="deleteEmpById">
        delete
        from tbl_employee
        where id = #{id}
    </delete>

    <!--    根据传入的对象删除-->
    <update id="updateEmp">
        update tbl_employee
        set last_name=#{lastName},
            email=#{email},
            gender=#{gender}
        where id = #{id}
    </update>

    <!--根据传入的map条件查询-->
    <select id="selectEmpByMap" resultType="com.xiao.mybatis.entity.Employee">
        select *
        from tbl_employee
        where id = #{id}
          and last_name = #{lastName}
    </select>

    <!--    查询并返回一条记录的map-->
    <select id="selectEmpByIdToMap" resultType="map">
        select *
        from tbl_employee
        where id = #{id}
    </select>

    <!-- 返回多条记录封装到map中，key是主键值，value是JavaBean对象-->
    <select id="selectAllToMap" resultType="com.xiao.mybatis.entity.Employee">
        select *
        from tbl_employee
    </select>

    <!--自定义结果集规则-->
    <!--type:自定义规则的Java类型-->
    <!--id:唯一id，用于引用-->
    <resultMap id="MyEmp" type="com.xiao.mybatis.entity.Employee">
        <!--用id标签定义主键底层会有优化，普通列用result标签-->
        <!--column：指定那一列-->
        <!--property:指定对应的JavaBean属性-->
        <!--不指定的列会自动封装-->
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
    </resultMap>

<!--    <select id="selectEmp" resultMap="MyEmp">-->
<!--        select *-->
<!--        from tbl_employee-->
<!--        where id = #{id}-->
<!--    </select>-->


</mapper>